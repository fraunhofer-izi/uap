..
  This is the documentation for uap. Please keep lines under 80 characters if
  you can and start each sentence on a new line as it decreases maintenance
  and makes diffs more readable.

.. title:: To-Do List

..
  This document lists remaining to-dos for **uap**.

To-do list
==========

Timestamps:
    ``unix_pipeline`` log messages should include timestamps.

Getting started package:
    We need a small package which demonstrates a quick pipeline, including
    the configuration and all required tools.
    
Steps should be able to access all ancestors:
    All upstream steps should be accessible via their step name or output 
    file key.
    
On-the-fly steps:
    We need a way to skip writing certain output files and have them flow 
    temporarily through a pipe only, if possible. 
    This is a disk space-saving feature only and has no effect on the 
    outcome of the pipeline. However, it would require that a step is 
    capable of being run *on-the-fly* which means it must read and write in 
    a single stream.
    
    Here's an example:
    
.. graphviz::

        digraph foo {
            rankdir=LR;
            splines=true;
            graph [fontname = Helvetica, fontsize = 12, nodesep = 0.2, ranksep = 0.3];
            node [fontname = Helvetica, fontsize = 12, shape = rect, style=filled, color="#404040", fillcolor="#ffffff"];
            edge [fontname = Helvetica, fontsize = 12, color="#404040"];

            segemehl [fillcolor = "#fce94f", color = "#c4a000"];
            in_reads [label = "reads\n(fastq.gz)"];
            mapped_reads [label = "mapped reads\n(sam.gz)"];
            some_filter [fillcolor = "#fce94f", color = "#c4a000"];
            filtered_reads [label = "filtered reads\n(sam.gz)"];
            htseq_count [label = "htseq-count", fillcolor = "#fce94f", color = "#c4a000"];
            counts [label = "counts"];
            
            in_reads -> segemehl -> mapped_reads -> some_filter -> filtered_reads;
            filtered_reads -> htseq_count -> counts;

            subgraph cluster_food {
                some_filter; filtered_reads;
                label = "on-the-fly step, filtered reads\nnever get written to disk";
                graph [style=dashed, color="#808080"];
            }
        }
        
Miscellaneous input files:
    Genome files and their index such as used by segemehl should not be defined
    via a fixed path.
    For traceability, it would be preferable to specify the hg19.fa URL and
    checksum and have the index generated by a step which the segemehl step
    depends on.
    
Make ``run-locally.py`` exit gracefully on receiving SIGTERM.

Show statistics for executing tasks:
    When showing currently executing tasks, show how long this job has already been
    running and how it relates to jobs that have already finished.
